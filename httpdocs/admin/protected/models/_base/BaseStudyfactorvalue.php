<?php

/**
 * This is the model base class for the table "studyfactorvalue".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Studyfactorvalue".
 *
 * Columns in table "studyfactorvalue" available as properties of the model,
 * followed by relations of table "studyfactorvalue" available as properties of the model.
 *
 * @property integer $studyfactorvalue_id
 * @property integer $studyfactor_id
 * @property integer $assay_id
 * @property string $factorvalue
 * @property string $name
 * @property integer $rank
 *
 * @property Assay $assay
 * @property Studyfactor $studyfactor
 */
abstract class BaseStudyfactorvalue extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'studyfactorvalue';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Studyfactorvalue|Studyfactorvalues', $n);
	}

	public static function representingColumn() {
		return 'factorvalue';
	}

	public function rules() {
		return array(
			array('studyfactor_id, assay_id', 'required'),
			array('studyfactor_id, assay_id, rank', 'numerical', 'integerOnly'=>true),
			array('factorvalue, name', 'safe'),
			array('factorvalue, name, rank', 'default', 'setOnEmpty' => true, 'value' => null),
			array('studyfactorvalue_id, studyfactor_id, assay_id, factorvalue, name, rank', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'assay' => array(self::BELONGS_TO, 'Assay', 'assay_id'),
			'studyfactor' => array(self::BELONGS_TO, 'Studyfactor', 'studyfactor_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'studyfactorvalue_id' => Yii::t('app', 'Studyfactorvalue'),
			'studyfactor_id' => null,
			'assay_id' => null,
			'factorvalue' => Yii::t('app', 'Factorvalue'),
			'name' => Yii::t('app', 'Name'),
			'rank' => Yii::t('app', 'Rank'),
			'assay' => null,
			'studyfactor' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('studyfactorvalue_id', $this->studyfactorvalue_id);
		$criteria->compare('studyfactor_id', $this->studyfactor_id);
		$criteria->compare('assay_id', $this->assay_id);
		$criteria->compare('factorvalue', $this->factorvalue, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('rank', $this->rank);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}