<?php

/**
 * This is the model base class for the table "quantificationresult".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Quantificationresult".
 *
 * Columns in table "quantificationresult" available as properties of the model,
 * followed by relations of table "quantificationresult" available as properties of the model.
 *
 * @property integer $quantificationresult_id
 * @property integer $feature_id
 * @property integer $biomaterial_id
 * @property integer $quantification_id
 * @property integer $type_id
 * @property double $value
 *
 * @property ExpressionresultQuantificationresult[] $expressionresultQuantificationresults
 * @property Biomaterial $biomaterial
 * @property Cvterm $type
 * @property Feature $feature
 * @property Quantification $quantification
 */
abstract class BaseQuantificationresult extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'quantificationresult';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Quantificationresult|Quantificationresults', $n);
	}

	public static function representingColumn() {
		return 'quantificationresult_id';
	}

	public function rules() {
		return array(
			array('feature_id, biomaterial_id, quantification_id, type_id, value', 'required'),
			array('feature_id, biomaterial_id, quantification_id, type_id', 'numerical', 'integerOnly'=>true),
			array('value', 'numerical'),
			array('quantificationresult_id, feature_id, biomaterial_id, quantification_id, type_id, value', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'expressionresultQuantificationresults' => array(self::HAS_MANY, 'ExpressionresultQuantificationresult', 'quantificationresult_id'),
			'biomaterial' => array(self::BELONGS_TO, 'Biomaterial', 'biomaterial_id'),
			'type' => array(self::BELONGS_TO, 'Cvterm', 'type_id'),
			'feature' => array(self::BELONGS_TO, 'Feature', 'feature_id'),
			'quantification' => array(self::BELONGS_TO, 'Quantification', 'quantification_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'quantificationresult_id' => Yii::t('app', 'Quantificationresult'),
			'feature_id' => null,
			'biomaterial_id' => null,
			'quantification_id' => null,
			'type_id' => null,
			'value' => Yii::t('app', 'Value'),
			'expressionresultQuantificationresults' => null,
			'biomaterial' => null,
			'type' => null,
			'feature' => null,
			'quantification' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('quantificationresult_id', $this->quantificationresult_id);
		$criteria->compare('feature_id', $this->feature_id);
		$criteria->compare('biomaterial_id', $this->biomaterial_id);
		$criteria->compare('quantification_id', $this->quantification_id);
		$criteria->compare('type_id', $this->type_id);
		$criteria->compare('value', $this->value);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}