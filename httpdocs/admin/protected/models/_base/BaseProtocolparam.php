<?php

/**
 * This is the model base class for the table "protocolparam".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Protocolparam".
 *
 * Columns in table "protocolparam" available as properties of the model,
 * followed by relations of table "protocolparam" available as properties of the model.
 *
 * @property integer $protocolparam_id
 * @property integer $protocol_id
 * @property string $name
 * @property integer $datatype_id
 * @property integer $unittype_id
 * @property string $value
 * @property integer $rank
 *
 * @property Cvterm $datatype
 * @property Protocol $protocol
 * @property Cvterm $unittype
 */
abstract class BaseProtocolparam extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'protocolparam';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Protocolparam|Protocolparams', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('protocol_id, name', 'required'),
			array('protocol_id, datatype_id, unittype_id, rank', 'numerical', 'integerOnly'=>true),
			array('value', 'safe'),
			array('datatype_id, unittype_id, value, rank', 'default', 'setOnEmpty' => true, 'value' => null),
			array('protocolparam_id, protocol_id, name, datatype_id, unittype_id, value, rank', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'datatype' => array(self::BELONGS_TO, 'Cvterm', 'datatype_id'),
			'protocol' => array(self::BELONGS_TO, 'Protocol', 'protocol_id'),
			'unittype' => array(self::BELONGS_TO, 'Cvterm', 'unittype_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'protocolparam_id' => Yii::t('app', 'Protocolparam'),
			'protocol_id' => null,
			'name' => Yii::t('app', 'Name'),
			'datatype_id' => null,
			'unittype_id' => null,
			'value' => Yii::t('app', 'Value'),
			'rank' => Yii::t('app', 'Rank'),
			'datatype' => null,
			'protocol' => null,
			'unittype' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('protocolparam_id', $this->protocolparam_id);
		$criteria->compare('protocol_id', $this->protocol_id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('datatype_id', $this->datatype_id);
		$criteria->compare('unittype_id', $this->unittype_id);
		$criteria->compare('value', $this->value, true);
		$criteria->compare('rank', $this->rank);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}