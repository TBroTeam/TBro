<?php

/**
 * This is the model base class for the table "assay_biomaterial".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AssayBiomaterial".
 *
 * Columns in table "assay_biomaterial" available as properties of the model,
 * followed by relations of table "assay_biomaterial" available as properties of the model.
 *
 * @property integer $assay_biomaterial_id
 * @property integer $assay_id
 * @property integer $biomaterial_id
 * @property integer $channel_id
 * @property integer $rank
 *
 * @property Assay $assay
 * @property Biomaterial $biomaterial
 * @property Channel $channel
 */
abstract class BaseAssayBiomaterial extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'assay_biomaterial';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AssayBiomaterial|AssayBiomaterials', $n);
	}

	public static function representingColumn() {
		return 'assay_biomaterial_id';
	}

	public function rules() {
		return array(
			array('assay_id, biomaterial_id', 'required'),
			array('assay_id, biomaterial_id, channel_id, rank', 'numerical', 'integerOnly'=>true),
			array('channel_id, rank', 'default', 'setOnEmpty' => true, 'value' => null),
			array('assay_biomaterial_id, assay_id, biomaterial_id, channel_id, rank', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'assay' => array(self::BELONGS_TO, 'Assay', 'assay_id'),
			'biomaterial' => array(self::BELONGS_TO, 'Biomaterial', 'biomaterial_id'),
			'channel' => array(self::BELONGS_TO, 'Channel', 'channel_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'assay_biomaterial_id' => Yii::t('app', 'Assay Biomaterial'),
			'assay_id' => null,
			'biomaterial_id' => null,
			'channel_id' => null,
			'rank' => Yii::t('app', 'Rank'),
			'assay' => null,
			'biomaterial' => null,
			'channel' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('assay_biomaterial_id', $this->assay_biomaterial_id);
		$criteria->compare('assay_id', $this->assay_id);
		$criteria->compare('biomaterial_id', $this->biomaterial_id);
		$criteria->compare('channel_id', $this->channel_id);
		$criteria->compare('rank', $this->rank);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}