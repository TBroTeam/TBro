<?php

/**
 * This is the model base class for the table "contact".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Contact".
 *
 * Columns in table "contact" available as properties of the model,
 * followed by relations of table "contact" available as properties of the model.
 *
 * @property integer $contact_id
 * @property integer $type_id
 * @property string $name
 * @property string $description
 *
 * @property Assay[] $assays
 * @property Study[] $studies
 * @property ProjectContact[] $projectContacts
 * @property Quantification[] $quantifications
 * @property ContactRelationship[] $contactRelationships
 * @property ContactRelationship[] $contactRelationships1
 * @property Cvterm $type
 * @property Biomaterial[] $biomaterials
 * @property Arraydesign[] $arraydesigns
 */
abstract class BaseContact extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'contact';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Contact|Contacts', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name', 'required'),
			array('type_id', 'numerical', 'integerOnly'=>true),
			array('name, description', 'length', 'max'=>255),
			array('type_id, description', 'default', 'setOnEmpty' => true, 'value' => null),
			array('contact_id, type_id, name, description', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'assays' => array(self::HAS_MANY, 'Assay', 'operator_id'),
			'studies' => array(self::HAS_MANY, 'Study', 'contact_id'),
			'projectContacts' => array(self::HAS_MANY, 'ProjectContact', 'contact_id'),
			'quantifications' => array(self::HAS_MANY, 'Quantification', 'operator_id'),
			'contactRelationships' => array(self::HAS_MANY, 'ContactRelationship', 'object_id'),
			'contactRelationships1' => array(self::HAS_MANY, 'ContactRelationship', 'subject_id'),
			'type' => array(self::BELONGS_TO, 'Cvterm', 'type_id'),
			'biomaterials' => array(self::HAS_MANY, 'Biomaterial', 'biosourceprovider_id'),
			'arraydesigns' => array(self::HAS_MANY, 'Arraydesign', 'manufacturer_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'contact_id' => Yii::t('app', 'Contact'),
			'type_id' => null,
			'name' => Yii::t('app', 'Name'),
			'description' => Yii::t('app', 'Description'),
			'assays' => null,
			'studies' => null,
			'projectContacts' => null,
			'quantifications' => null,
			'contactRelationships' => null,
			'contactRelationships1' => null,
			'type' => null,
			'biomaterials' => null,
			'arraydesigns' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('contact_id', $this->contact_id);
		$criteria->compare('type_id', $this->type_id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('description', $this->description, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}