<?php

/**
 * This is the model base class for the table "study".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Study".
 *
 * Columns in table "study" available as properties of the model,
 * followed by relations of table "study" available as properties of the model.
 *
 * @property integer $study_id
 * @property integer $contact_id
 * @property integer $pub_id
 * @property integer $dbxref_id
 * @property string $name
 * @property string $description
 *
 * @property StudyAssay[] $studyAssays
 * @property Studydesign[] $studydesigns
 * @property Contact $contact
 * @property Dbxref $dbxref
 * @property Pub $pub
 * @property Studyprop[] $studyprops
 */
abstract class BaseStudy extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'study';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Study|Studies', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('contact_id, name', 'required'),
			array('contact_id, pub_id, dbxref_id', 'numerical', 'integerOnly'=>true),
			array('description', 'safe'),
			array('pub_id, dbxref_id, description', 'default', 'setOnEmpty' => true, 'value' => null),
			array('study_id, contact_id, pub_id, dbxref_id, name, description', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'studyAssays' => array(self::HAS_MANY, 'StudyAssay', 'study_id'),
			'studydesigns' => array(self::HAS_MANY, 'Studydesign', 'study_id'),
			'contact' => array(self::BELONGS_TO, 'Contact', 'contact_id'),
			'dbxref' => array(self::BELONGS_TO, 'Dbxref', 'dbxref_id'),
			'pub' => array(self::BELONGS_TO, 'Pub', 'pub_id'),
			'studyprops' => array(self::HAS_MANY, 'Studyprop', 'study_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'study_id' => Yii::t('app', 'Study'),
			'contact_id' => null,
			'pub_id' => null,
			'dbxref_id' => null,
			'name' => Yii::t('app', 'Name'),
			'description' => Yii::t('app', 'Description'),
			'studyAssays' => null,
			'studydesigns' => null,
			'contact' => null,
			'dbxref' => null,
			'pub' => null,
			'studyprops' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('study_id', $this->study_id);
		$criteria->compare('contact_id', $this->contact_id);
		$criteria->compare('pub_id', $this->pub_id);
		$criteria->compare('dbxref_id', $this->dbxref_id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('description', $this->description, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}