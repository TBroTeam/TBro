<?php

/**
 * This is the model base class for the table "organism".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Organism".
 *
 * Columns in table "organism" available as properties of the model,
 * followed by relations of table "organism" available as properties of the model.
 *
 * @property integer $organism_id
 * @property string $abbreviation
 * @property string $genus
 * @property string $species
 * @property string $common_name
 * @property string $comment
 *
 * @property Feature[] $features
 * @property Organismprop[] $organismprops
 * @property OrganismDbxref[] $organismDbxrefs
 * @property Biomaterial[] $biomaterials
 */
abstract class BaseOrganism extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'organism';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Organism|Organisms', $n);
	}

	public static function representingColumn() {
		return 'genus';
	}

	public function rules() {
		return array(
			array('genus, species', 'required'),
			array('abbreviation, genus, species, common_name', 'length', 'max'=>255),
			array('comment', 'safe'),
			array('abbreviation, common_name, comment', 'default', 'setOnEmpty' => true, 'value' => null),
			array('organism_id, abbreviation, genus, species, common_name, comment', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'features' => array(self::HAS_MANY, 'Feature', 'organism_id'),
			'organismprops' => array(self::HAS_MANY, 'Organismprop', 'organism_id'),
			'organismDbxrefs' => array(self::HAS_MANY, 'OrganismDbxref', 'organism_id'),
			'biomaterials' => array(self::HAS_MANY, 'Biomaterial', 'taxon_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'organism_id' => Yii::t('app', 'Organism'),
			'abbreviation' => Yii::t('app', 'Abbreviation'),
			'genus' => Yii::t('app', 'Genus'),
			'species' => Yii::t('app', 'Species'),
			'common_name' => Yii::t('app', 'Common Name'),
			'comment' => Yii::t('app', 'Comment'),
			'features' => null,
			'organismprops' => null,
			'organismDbxrefs' => null,
			'biomaterials' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('organism_id', $this->organism_id);
		$criteria->compare('abbreviation', $this->abbreviation, true);
		$criteria->compare('genus', $this->genus, true);
		$criteria->compare('species', $this->species, true);
		$criteria->compare('common_name', $this->common_name, true);
		$criteria->compare('comment', $this->comment, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}