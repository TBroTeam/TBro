<?php

/**
 * interface for classes implementing a command line application subcommand
 */
interface CLI_Command {

    /**
     * name of subcommand
     */
    static function CLI_commandName();

    /**
     * description of subcommand
     */
    static function CLI_commandDescription();

    /**
     * will be applied to autogenerated command --help option
     */
    static function CLI_longHelp();

    /**
     * initiate your Console_Commandline subcommand on variable $parser here
     * @param Console_CommandLine $parser
     */
    static function CLI_getCommand(Console_CommandLine $parser);

    /**
     * you may check for required options for your command here
     * @param type $options
     */
    static function CLI_checkRequiredOpts(Console_CommandLine_Result $command);
    
    /**
     * execute code according to the $result
     * return true on success, return false to display help, throw Error to display Error Message
     * @param Console_CommandLine_Result $command
     */
    static function CLI_execute(Console_CommandLine_Result $command, Console_CommandLine $parser);
}


require_once 'Console/CommandLine/Action.php';

class Console_CommandLine_Action_ExtendedHelp extends Console_CommandLine_Action {

    public function execute($value = false, $params = array()) {
        $helpstr = $this->parser->renderer->usage();
        if (isset($params['class']) && class_exists($params['class']))
            $helpstr.=call_user_func(array($params['class'], 'CLI_longHelp')) . "\n";
        $this->parser->outputter->stdout($helpstr);
        exit(0);
    }

}

//overwrite CommandLine Help function... ouch!
Console_CommandLine::$actions['Help'] = array('Console_CommandLine_Action_ExtendedHelp', false);


?>
